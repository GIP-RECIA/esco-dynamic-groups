<?xml version="1.0"?>
<project name="ESCO-DynammicGroups" default="esco-dg.help" basedir=".">
    <description>Dynamic groups extension for Grouper</description>
	
	<!-- Properties Section -->
	<property file="build.properties"/>
	<property name="esco-dg.lib.dir" value="lib/"/>
	<property name="esco-dg.build.dir" value="build/"/>
	<property name="esco-dg.classes.dir" value="${esco-dg.build.dir}classes/"/>
	<property name="esco-dg.dist.dir" value="dist/"/>
	<property name="esco-dg.prop.dir" value="resources/"/>

	
	<property name="esco-dg.src.dir" value="src/"/>
	<property name="esco-dg.version" value="0.1.0-alpha0"/>
	<property name="esco-dg.grouper-dg.lib" value="${esco-dg.dist.dir}grouper-esco-dg-hooks-${esco-dg.version}.jar"/>
	<property name="esco-dg.definition.lib" value="${esco-dg.dist.dir}grouper-esco-dg-definition-${esco-dg.version}.jar"/>
	<property name="esco-dg.definition.includes" value="org/esco/dynamicgroups/domain/definition/* org/esco/dynamicgroups/domain/beans/II18NManager*  org/esco/dynamicgroups/domain/beans/DisabledI18NManager*"/>
	<property name="esco-dg.schema.file" value="${esco-dg.build.dir}schema.ddl"/>
		
	<!-- jars to copy for the deployment -->
	<property name="esco-dg.3part.spring.lib" value="${esco-dg.lib.dir}spring-2.5.5.jar"/>
	<property name="esco-dg.3part.ldap.lib" value="${esco-dg.lib.dir}ldap.jar"/>
	
	<property name="esco-dg.grouper.ws.lib.dir" value="${esco-dg.grouper.ws.dir}/lib/custom/"/>
	<property name="esco-dg.grouper.ws.prop.dir" value="${esco-dg.grouper.ws.dir}/resources/resources/"/>
	
	<property name="esco-dg.grouper.custom.ui.lib.dir" value="${esco-dg.grouper.custom.ui.dir}/WEB-INF/lib/"/>
	<property name="esco-dg.grouper.custom.ui.prop.dir" value="${esco-dg.grouper.custom.ui.dir}/resources/"/>
	<property name="esco-dg.grouper.custom.ui.classes.dir" value="${esco-dg.grouper.custom.ui.dir}/WEB-INF/classes/"/>
	<property name="esco-dg.grouper.custom.ui.build.file" value="additional-build.xml"/>
	<property name="esco-dg.grouper.custom.ui.web.file" value="web.spring.xml"/>
	
	<!-- Grouper configuration directory, used to generate a stress test groups set.-->
	<property name="esco-dg.st.grouper.conf.dir" value="${esco-dg.prop.dir}grouper_api_conf"/>
	<property name="esco-dg.st.grouper.lib.dir" value="${esco-dg.lib.dir}grouper"/>
	
	<property name="esco-dg.conf.hibernate.file" value="${esco-dg.prop.dir}hibernate.cfg.xml"/>
	<property name="esco-dg.conf.grouper-dg.file" value="${esco-dg.prop.dir}esco-dynamic-groups.properties"/>
	<property name="esco-dg.conf.logging.file" value="${esco-dg.prop.dir}log4j.properties"/>
	
	<!-- Path Section -->
	<path id="esco-dg.classpath">
	   <pathelement path="${esco-dg.build.dir}"/>
		<pathelement path="${basedir}"/>
		<pathelement location="${esco-dg.prop.dir}"/>
		<fileset dir="${esco-dg.lib.dir}" includes="**/*.jar" />
	</path>
		
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${esco-dg.lib.dir}/ant-contrib-1.0b3.jar"/>
			
	
	<!-- Displays tsome properties. -->	
	<target name="esco-dg.display" description="Displays the user properties">
		<property name = "esco-dg.classpath.value" refid="esco-dg.classpath"/>
		<echo >
			
			esco-dg.compile.debug                  = ${esco-dg.compile.debug}
			esco-dg.compile.deprecation            = ${esco-dg.compile.deprecation}
			esco-dg.compile.target                 = ${esco-dg.compile.target}
			esco-dg.compile.source                 = ${esco-dg.compile.source}
			esco-dg.compile.optimize               = ${esco-dg.compile.optimize}
			
			esco-dg.lib.dir                        = ${esco-dg.lib.dir}
			esco-dg.classes.dir                    = ${esco-dg.classes.dir}
			esco-dg.build.dir                      = ${esco-dg.build.dir}
			esco-dg.dist.dir                       = ${esco-dg.dist.dir}
			esco-dg.src.dir                        = ${esco-dg.src.dir}
			esco-dg.prop.dir                       = ${esco-dg.prop.dir}
			esco-dg.classpath                      = ${esco-dg.classpath.value}
			
			esco-db.version                        = ${esco-dg.version}
			esco-dg.grouper-dg.lib                 = ${esco-dg.grouper-dg.lib}
			esco-dg.definition.lib                 = ${esco-dg.definition.lib}
			esco-dg.definition.includes            = ${esco-dg.definition.includes}
			
			esco-dg.grouper.ws.dir                 = ${esco-dg.grouper.ws.dir}
			esco-dg.grouper.ws.lib                 = ${esco-dg.grouper.ws.lib}
			esco-dg.grouper.ws.prop.dir            = ${esco-dg.grouper.ws.prop.dir}
		
			esco-dg.grouper.custom.ui.dir          = ${esco-dg.grouper.custom.ui.dir}
			esco-dg.grouper.custom.ui.lib.dir      = ${esco-dg.grouper.custom.ui.lib.dir}
			esco-dg.grouper.custom.ui.classes.dir  = ${esco-dg.grouper.custom.ui.classes.dir}
			esco-dg.grouper.custom.ui.prop.dir     = ${esco-dg.grouper.custom.ui.prop.dir}
			esco-dg.grouper.custom.ui.build.file   = ${esco-dg.grouper.custom.ui.build.file}
			esco-dg.grouper.custom.ui.web.file     = ${esco-dg.grouper.custom.ui.web.file}
			
			esco-dg.st.grouper.conf.dir            = ${esco-dg.grouper.conf.dir}	
			esco-dg.st.grouper.lib.dir             = ${esco-dg.st.grouper.lib.dir}
			
			esco-dg.3part.spring.lib               = ${esco-dg.3part.spring.lib}
			esco-dg.3part.ldap.lib                 = ${esco-dg.3part.ldap.lib}
			
			esco-dg.conf.hibernate.file            = ${esco-dg.conf.hibernate.file}
			esco-dg.conf.grouper-dg.file           = ${esco-dg.conf.grouper-dg.file}
			esco-dg.conf.logging.file              = ${esco-dg.conf.logging.file}
		</echo>
	</target>
	
	<!-- Compilation and packaging targets -->
	<target name="esco-dg.create.build.dir">
		<mkdir dir="${esco-dg.build.dir}"/>
	</target>
	
	<target name="esco-dg.create.dist.dir">
		<mkdir dir="${esco-dg.dist.dir}"/>
	</target>
	
	<target name="esco-dg.compile" description="Compilation of the aspects.">
		<mkdir dir="${esco-dg.build.dir}"/>
		<javac  srcdir="${esco-dg.src.dir}"
			    debug="${esco-dg.compile.debug}"
	      	    deprecation="${esco-dg.compile.deprecation}"
	            target="${esco-dg.compile.target}"
			    source="${esco-dg.compile.source}"
				optimize="${esco-dg.compile.optimize}"
				includes="org/esco/dynamicgroups/**"
				excludes="org/esco/dynamicgroups/ldap/**"
				destdir="${esco-dg.build.dir}"
				classpathref="esco-dg.classpath">
		 </javac>
	</target>
	
	<target name="esco-dg.build" 
			description="Creates the jar for grouper with dynamic groups support." 
			depends="esco-dg.create.dist.dir, esco-dg.compile" >
			<jar destfile="${esco-dg.grouper-dg.lib}" basedir="${esco-dg.build.dir}" excludes="**/aop/*">
		  	   		<manifest>
		  	   			<attribute name="Built-By"                value="A. Deman - GIP RECIA"/>
				        <attribute name="Implementation-Vendor"   value="ESCO/GIP RECIA for the dynamic groups add on."/>
				        <attribute name="Implementation-Title"    value="Hooks for grouper with dynamic groups support."/>
				        <attribute name="Implementation-Version"  value="${esco-dg.version}"/>
				    </manifest>
			</jar>
	</target>
	<target name="esco-dg.build.definition.lib" 
			description="Creates the jar for the dynamic definitions jar." 
			depends="esco-dg.create.dist.dir, esco-dg.compile" >
			
			<copy todir="${esco-dg.build.dir}">
					<fileset dir="${esco-dg.src.dir}" includes="${esco-dg.definition.includes}"/>
			</copy>
		
			<jar destfile="${esco-dg.definition.lib}" basedir="${esco-dg.build.dir}"  
				includes="${esco-dg.definition.includes}" 
				excludes="**/Test* **/*Bean*">
		  	   		<manifest>
		  	   			<attribute name="Built-By"                value="A. Deman - GIP RECIA"/>
				        <attribute name="Implementation-Vendor"   value="ESCO/GIP RECIA Logical definition for the dynamic groups."/>
				        <attribute name="Implementation-Title"    value="Dynamic groups definition."/>
				        <attribute name="Implementation-Version"  value="${esco-dg.version}"/>
				    </manifest>
			</jar>
		    <delete>
			   <fileset dir="${esco-dg.build.dir}">
			      <include name="**/*.java"/>
			   </fileset>
		    </delete>
		    
	</target>
	
	<!-- Database initialisation -->
	<target name="esco-dg.init-db" 
		depends="esco-dg.compile" description="Initialization of the data base">
		<taskdef name="hibernatetool" 
		         classname="org.hibernate.tool.ant.HibernateToolTask" 
		         classpathref="esco-dg.classpath" />
		
		<input
			message="Database inititalization - everything in the database will be lost - Proceed [y/N]?"
			validargs="Y,N,y,n"
			addproperty="do.dbinit"
			defaultvalue="N"/>
		<if>
			<or>
				<equals arg1="${do.dbinit}" arg2="y" />
				<equals arg1="${do.dbinit}" arg2="Y" />
			</or>
			<then>
				<hibernatetool destdir=".">
					<configuration configurationfile="resources/hibernate.cfg.xml">
						<fileset dir="resources" includes="mapping/*.hbm.xml"/>
					</configuration>
		  			<hbm2ddl
						export="true"
		  				update="false"
		  				drop="true"
		  				create="true"
		  				outputfilename="${esco-dg.schema.file}"
		  				delimiter=";" 
		  				format="true"
		  				haltonerror="true"/>
		  		</hibernatetool>
			</then>
			<else>
				<fail>Operation aborted.</fail>
			</else>
		</if>
	</target>
	
	<!-- deploy targets -->
	<target name="esco-dg.check-config" description="Checks that the example config files have been copied" >
		<if>
			<not>
				<available file="${esco-dg.conf.hibernate.file}"/>
			</not>
			<then>
				<fail message="${esco-dg.conf.hibernate.file} not found." />	
			</then>
		</if>
		<if>
			<not>
				<available file="${esco-dg.conf.grouper-dg.file}"/>
			</not>
			<then>
				<fail message="${esco-dg.conf.grouper-dg.file} not found." />	
			</then>
		</if>
		<if>
			<not>
				<available file="${esco-dg.conf.logging.file}"/>
			</not>
			<then>
				<fail message="${esco-dg.conf.logging.file} not found." />	
			</then>
		</if>
	</target>
	<!-- Deploy the hooks for Grouper -->
	<target name="esco-dg.deploy" 
		depends="esco-dg.check-config, esco-dg.build" 
		description="Deploys the files in custom grouper ui directory.">
		<mkdir dir="${esco-dg.grouper.custom.ui.dir}"/>
		<copy todir="${esco-dg.grouper.custom.ui.prop.dir}">
			<fileset dir="${esco-dg.prop.dir}">
				<exclude name="grouper.*"/>
				<exclude name="log4j.*"/>
				<exclude name="*.example"/>
				<exclude name="${esco-dg.grouper.custom.ui.web.file}"/>
				<exclude name="${esco-dg.grouper.custom.ui.build.file}"/>
			</fileset>
		</copy>
		<copy file="${esco-dg.conf.logging.file}" todir="${esco-dg.grouper.custom.ui.classes.dir}" />
		<copy todir="${esco-dg.grouper.custom.ui.dir}">
			<fileset dir="${esco-dg.prop.dir}">
				<include name="${esco-dg.grouper.custom.ui.build.file}"/> 			
				<include name="${esco-dg.grouper.custom.ui.web.file}"/> 
			</fileset>
		</copy>
		<copy file="${esco-dg.3part.ldap.lib}" todir="${esco-dg.grouper.custom.ui.lib.dir}" />
		<copy file="${esco-dg.3part.spring.lib}" todir="${esco-dg.grouper.custom.ui.lib.dir}" />
		<copy file="${esco-dg.grouper-dg.lib}" todir="${esco-dg.grouper.custom.ui.lib.dir}" />
 	</target>
	
	<!-- Deploy the hooks for the web service -->
	<target name="esco-dg.deploy-ws" 
		depends="esco-dg.check-config, esco-dg.build" 
		description="Deploys the files in grouper web service's directory.">
		
		<mkdir dir="${esco-dg.grouper.ws.prop.dir}"/>
		
		<copy todir="${esco-dg.grouper.ws.prop.dir}">
			<fileset dir="${esco-dg.prop.dir}">
				<exclude name="grouper.*"/>
				<exclude name="log4j.*"/>
				<exclude name="*.example"/>
				<exclude name="grouper_api_conf/*"/>
				<exclude name="dg-stress_test*"/>
				<exclude name="applicationContext-batch.xml"/>
				<exclude name="${esco-dg.grouper.custom.ui.web.file}"/>
				<exclude name="${esco-dg.grouper.custom.ui.build.file}"/>
			</fileset>
		</copy>
		
		<copy file="${esco-dg.3part.ldap.lib}" todir="${esco-dg.grouper.ws.lib.dir}" />
		<copy file="${esco-dg.3part.spring.lib}" todir="${esco-dg.grouper.ws.lib.dir}" />
		<copy file="${esco-dg.grouper-dg.lib}" todir="${esco-dg.grouper.ws.lib.dir}" />
 	</target>
	
	<target name="esco-dg.clean"> 
			<delete quiet="true" dir="${esco-dg.build.dir}"/>
			<delete quiet="true" dir="${esco-dg.dist.dir}"/>
	</target>
	
	<!-- Test a logic definition -->
	<target name="esco-dg.test-definition"
	   	description="Test a logic definition">
	    <property name="definition" value=" "/>
	    <java dir="${basedir}" 
	    	classname="org.esco.dynamicgroups.domain.DefinitionToLDAPFilterTesterBatch" 
	    	fork="true" 
    		classpathref="esco-dg.classpath">
	      <arg value="${definition}"/>
	    </java>
	</target>
	
	<!-- Groups creation for stress test -->
	<target name="esco-dg.stress-test-set"
			description = "generates groups to test the load resistance"
				depends="esco-dg.build">
		
			<path id="esco-dg.st-classpath">
				   <pathelement path="${esco-dg.build.dir}"/>
					<pathelement path="${basedir}"/>
					<pathelement location="${esco-dg.prop.dir}"/>
					<pathelement location="${esco-dg.st.grouper.conf.dir}"/>	
					<fileset dir="${esco-dg.st.grouper.lib.dir}" includes="**/*.jar" />
					<fileset dir="${esco-dg.lib.dir}" includes="**/*.jar" />
				</path>
		 <property name="definitions.file" value=" "/>
		 <property name="stem" value=" "/>
		 <property name="prefix" value=" "/>
		 <property name="nb.groups" value=" "/>
		 <property name="nb.groups.per.stem" value=" "/>
		<echo>
			definitions.file    = ${definitions.file}
			stem                = ${stem}
			prefix              = ${prefix}
			nb.groups           = ${nb.groups}
			nb.groups.per.stem  = ${nb.groups.per.stem}
		</echo>	
		 <java dir="${basedir}" 
		   	classname="org.esco.dynamicgroups.util.StressTestGeneratorBatch" 
		   	fork="true" 
			classpathref="esco-dg.st-classpath">
		    <arg value="${definitions.file}"/>
		    <arg value="${stem}"/>
		    <arg value="${prefix}"/>
		    <arg value="${nb.groups}"/>
		    <arg value="${nb.groups.per.stem}"/>
		  </java>
	</target>

	<!-- Help target -->
	<target name="esco-dg.help" description="Displays the available tagets">
		<echo>
            esco-dg.display         Displays the properties (Debug purpose).
            esco-dg.help            This task.
            esco-dg.check-config    Checks the presence of the configuration files.
            esco-dg.compile         Compilation target.
            esco-dg.clean           Deletes all the files produced by the compilation target.   
            esco-dg.build           Creates the jar.
            esco-dg.deploy          Copy the files into the Grouper's custom ui directory.
            esco-dg.init-db         Initialize the database. 
            esco-dg.test-definition Test a logic defintion and gives the query associated to the backend. 
                                    ant -Ddefinition="And(objectClass=ENTEleve, ENTEleveClasses=*$632)" esco-dg.test-definition
            
            esco-dg.stress-test-set Generates a groups set. 
                                    ant esco-dg.stress-test-set -Ddefinitions.file=dg-stress_test-01.dat -Dstem=esco:st3 -Dprefix=st_grp_ -Dnb.groups=1000  -Dnb.groups.per.stem=200

                                    This will generate 1000 groups (st_grp_000...999) dispatched in 5 stems under the stem esco:st, 
                                    using the members definitions stored in the file  dg-stress_test-01.dat.
		</echo>
	</target>

	
</project>